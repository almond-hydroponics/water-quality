# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "nodemcuv2;uno;" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)


SET(CMAKE_C_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-atmelavr/bin/avr-gcc")
SET(CMAKE_CXX_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-atmelavr/bin/avr-g++")
SET(CMAKE_CXX_FLAGS "-fno-exceptions -fno-threadsafe-statics -fpermissive -std=gnu++11 -Os -Wall -ffunction-sections -fdata-sections -flto -mmcu=atmega328p")
SET(CMAKE_C_FLAGS "-std=gnu11 -fno-fat-lto-objects -Os -Wall -ffunction-sections -fdata-sections -flto -mmcu=atmega328p")

SET(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 11)

if (CMAKE_BUILD_TYPE MATCHES "uno")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_AVR_UNO')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega328P__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/variants/standard")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit ADXL343_ID6117")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit BusIO_ID6214")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit FONA Library_ID634")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit MQTT Library_ID1092")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit SleepyDog Library_ID401")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit SleepyDog Library_ID401/utility")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit Unified Sensor_ID31")
    include_directories("$ENV{HOME}/.platformio/lib/ArduinoJson_ID64/src")
    include_directories("$ENV{HOME}/.platformio/lib/AzureIoTHub_ID480/src")
    include_directories("$ENV{HOME}/.platformio/lib/AzureIoTProtocol_MQTT_ID1279/src")
    include_directories("$ENV{HOME}/.platformio/lib/Base64_ID582/src")
    include_directories("$ENV{HOME}/.platformio/lib/DHT sensor library_ID19")
    include_directories("$ENV{HOME}/.platformio/lib/DallasTemperature_ID54")
    include_directories("$ENV{HOME}/.platformio/lib/ESP Async WebServer_ID306/src")
    include_directories("$ENV{HOME}/.platformio/lib/Firebase ESP8266 Client_ID6247/src")
    include_directories("$ENV{HOME}/.platformio/lib/FirebaseArduino_ID1259/src")
    include_directories("$ENV{HOME}/.platformio/lib/OneWire_ID1")
    include_directories("$ENV{HOME}/.platformio/lib/PubSubClient_ID89/src")
    include_directories("$ENV{HOME}/.platformio/lib/RTClib_ID83")
    include_directories("$ENV{HOME}/.platformio/lib/SparkFun HTU21D Humidity and Temperature Sensor Breakout_ID520/src")
    include_directories("$ENV{HOME}/.platformio/lib/WiFi101_ID299/src")
    include_directories("$ENV{HOME}/.platformio/lib/avr-utils_ID7254/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/uno/*.*
    )
endif()

if (CMAKE_BUILD_TYPE MATCHES "nodemcuv2")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ESP8266')
    add_definitions(-D'ARDUINO_ARCH_ESP8266')
    add_definitions(-D'ARDUINO_ESP8266_NODEMCU')
    add_definitions(-D'F_CPU=80000000L')
    add_definitions(-D'__ets__')
    add_definitions(-D'ICACHE_FLASH')
    add_definitions(-D'ARDUINO=10805')
    add_definitions(-D'ARDUINO_BOARD=\"PLATFORMIO_NODEMCUV2\"')
    add_definitions(-D'FLASHMODE_DIO')
    add_definitions(-D'LWIP_OPEN_SRC')
    add_definitions(-D'NONOSDK22x_190703=1')
    add_definitions(-D'TCP_MSS=536')
    add_definitions(-D'LWIP_FEATURES=1')
    add_definitions(-D'LWIP_IPV6=0')
    add_definitions(-D'VTABLES_IN_FLASH')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/tools/sdk/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/tools/sdk/libc/xtensa-lx106-elf/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/cores/esp8266")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/tools/sdk/lwip2/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/variants/nodemcu")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit ADXL343_ID6117")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit BusIO_ID6214")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit FONA Library_ID634")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit MQTT Library_ID1092")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit SleepyDog Library_ID401")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit SleepyDog Library_ID401/utility")
    include_directories("$ENV{HOME}/.platformio/lib/Adafruit Unified Sensor_ID31")
    include_directories("$ENV{HOME}/.platformio/lib/ArduinoJson_ID64/src")
    include_directories("$ENV{HOME}/.platformio/lib/AzureIoTHub_ID480/src")
    include_directories("$ENV{HOME}/.platformio/lib/AzureIoTProtocol_MQTT_ID1279/src")
    include_directories("$ENV{HOME}/.platformio/lib/Base64_ID582/src")
    include_directories("$ENV{HOME}/.platformio/lib/DHT sensor library_ID19")
    include_directories("$ENV{HOME}/.platformio/lib/DallasTemperature_ID54")
    include_directories("$ENV{HOME}/.platformio/lib/ESP Async WebServer_ID306/src")
    include_directories("$ENV{HOME}/.platformio/lib/ESPAsyncTCP_ID305/src")
    include_directories("$ENV{HOME}/.platformio/lib/Firebase ESP8266 Client_ID6247/src")
    include_directories("$ENV{HOME}/.platformio/lib/FirebaseArduino_ID1259/src")
    include_directories("$ENV{HOME}/.platformio/lib/OneWire_ID1")
    include_directories("$ENV{HOME}/.platformio/lib/PubSubClient_ID89/src")
    include_directories("$ENV{HOME}/.platformio/lib/RTClib_ID83")
    include_directories("$ENV{HOME}/.platformio/lib/SparkFun HTU21D Humidity and Temperature Sensor Breakout_ID520/src")
    include_directories("$ENV{HOME}/.platformio/lib/WiFi101_ID299/src")
    include_directories("$ENV{HOME}/.platformio/lib/avr-utils_ID7254/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ArduinoOTA")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/DNSServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/EEPROM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266AVRISP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266HTTPClient/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266HTTPUpdateServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266LLMNR")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266NetBIOS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266SSDP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266SdFat/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266WebServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266WiFi/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266WiFiMesh/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266httpUpdate/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/ESP8266mDNS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/Ethernet/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/GDBStub/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/Hash/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/LittleFS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/SD/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/SDFS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/SPI")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/SPISlave/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/TFT_Touch_Shield_V2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/Ticker/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif8266/libraries/esp8266/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/4.8.2")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/4.8.2/xtensa-lx106-elf")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa/lib/gcc/xtensa-lx106-elf/4.8.2/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa/lib/gcc/xtensa-lx106-elf/4.8.2/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/nodemcuv2/*.*
    )
endif()

FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/src/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
